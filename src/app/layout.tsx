import Icon, { IconName } from "@/components/Icon";
import { Inter } from "next/font/google";
import clsx from "clsx";
import { TrpcProvider } from "@/utils/trpc/provider";

import "./globals.css";

const inter = Inter({ subsets: ["latin"] });

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const menus: {
    category: string;
    links: {
      iconName: IconName;
      text: string;
      href: string;
      badge?: {
        className: string;
        text: string;
      };
    }[];
  }[] = [
    {
      category: "Menu",
      links: [
        {
          iconName: "dashboard",
          text: "Dashboard",
          href: "#",
        },
        {
          iconName: "inbox",
          text: "Inbox",
          href: "#",
          badge: {
            className: "text-indigo-500 bg-indigo-50",
            text: "100",
          },
        },
        {
          iconName: "messages",
          text: "Messages",
          href: "#",
        },
        {
          iconName: "notifications",
          text: "Notifications",
          href: "#",
          badge: {
            className: "text-red-500 bg-red-50",
            text: "1.2k",
          },
        },
      ],
    },
    {
      category: "Tasks",
      links: [
        {
          iconName: "available-tasks",
          text: "Available Tasks",
          href: "#",
        },
        {
          iconName: "clients",
          text: "Clients",
          href: "#",
          badge: {
            className: "text-green-500 bg-green-50",
            text: "15",
          },
        },
      ],
    },
    {
      category: "Settings",
      links: [
        {
          iconName: "profile",
          text: "Profile",
          href: "#",
        },
        {
          iconName: "settings",
          text: "Settings",
          href: "#",
        },
        {
          iconName: "logout",
          text: "Logout",
          href: "#",
        },
      ],
    },
  ];

  return (
    <html lang="en">
      <body className={inter.className}>
        <TrpcProvider>
          <div
            className={clsx(
              "min-h-screen",
              "flex",
              "flex-col",
              "flex-auto",
              "flex-shrink-0",
              "antialiased",
              "bg-gray-50",
              "text-gray-800"
            )}
          >
            <div className="fixed flex flex-col top-0 left-0 w-64 bg-white h-full border-r">
              <div className="flex h-14 border-b p-4 text-xl font-bold">
                <p className="paragraph">Menu</p>
              </div>
              <div className="overflow-y-auto overflow-x-hidden flex-grow">
                <div className="flex flex-col py-4 space-y-1 h-full">
                  {menus.map((menu) => (
                    <div
                      key={menu.category}
                      className="flex flex-col last:grow last:justify-end"
                    >
                      <div className="px-5">
                        <div className="flex flex-row items-center h-8">
                          <p className="paragraph text-sm text-gray-500">
                            {menu.category}
                          </p>
                        </div>
                      </div>
                      <ul>
                        {menu.links.map((link) => (
                          <li key={`${link.href}_${link.text}`}>
                            <a
                              href={link.href}
                              className={clsx(
                                "relative",
                                "flex",
                                "flex-row",
                                "items-center",
                                "h-11",
                                "focus:outline-none",
                                "hover:bg-gray-50",
                                "text-gray-600",
                                "hover:text-gray-800",
                                "border-l-4",
                                "border-transparent",
                                "hover:border-indigo-500",
                                "pr-6"
                              )}
                            >
                              <Icon
                                name={link.iconName}
                                className="w-5 h-5 ml-4"
                              />
                              <span className="paragraph ml-2 text-sm">
                                {link.text}
                              </span>
                              {link.badge !== undefined && (
                                <span
                                  className={clsx(
                                    "px-2",
                                    "py-0.5",
                                    "ml-auto",
                                    "text-xs",
                                    "font-medium",
                                    "tracking-wide",
                                    "rounded-full",
                                    link.badge.className
                                  )}
                                >
                                  {link.badge.text}
                                </span>
                              )}
                            </a>
                          </li>
                        ))}
                      </ul>
                    </div>
                  ))}
                </div>
              </div>
            </div>
            <main className="flex min-h-screen flex-col justify-between ml-64 px-6 py-4">
              {children}
            </main>
          </div>
        </TrpcProvider>
      </body>
    </html>
  );
}
